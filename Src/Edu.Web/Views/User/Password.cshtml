
@{
    ViewBag.Title = "修改密码";
}

<link href="~/Content/bootstrapValidator.css" rel="stylesheet" />
<script src="~/Scripts/bootstrapValidator.js"></script>
<script src="~/Scripts/tripledes.js"></script>
<script src="~/Scripts/mode-ecb.js"></script>
<style>
    .form-horizontal .form-control {
        padding: 0 10px 0 30px;
    }

    .form-horizontal .form-group i {
        position: absolute;
        top: 7px;
        left: 22px;
        font-size: 17px;
        color: #c8c8c8;
        transition: all 0.5s ease 0s;
    }

    .form-horizontal .form-control:focus + i {
        color: #00b4ef;
    }
</style>

<ol class="breadcrumb">
    <li>修改密码</li>
</ol>
<div class="row">
    <div class="col-md-6 col-md-offset-3 form-horizontal" id="updateForm" role="form">
        <div class="form-group">
            <label class="col-sm-2 control-label" for="txtOriginalPassword">原密码</label>
            <div class="col-sm-10">
                <input type="password" class="form-control" id="txtOriginalPassword" name="txtOriginalPassword" placeholder="请输入原始密码" />
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for="txtNewPassword">新密码</label>
            <div class="col-sm-10">
                <input type="password" class="form-control" id="txtNewPassword" name="txtNewPassword" placeholder="请输入新密码" />
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for="txtReNewPassword">重复新密码</label>
            <div class="col-sm-10">
                <input type="password" class="form-control" id="txtReNewPassword" name="txtReNewPassword" placeholder="请重新输入新密码" />
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-offset-4">
        <button type="button" id="btnCommit" class="btn btn-primary">
            提交更改
        </button>
    </div>
</div>

<script>
    var tokenInfo = {
        secret: '@ViewBag.Secret',
        iv: '@ViewBag.IV'
    };

    function encryptByDES(message, key, iv) {
        var keyHex = CryptoJS.enc.Utf8.parse(key);
        var encrypted = CryptoJS.TripleDES.encrypt(message,
            keyHex,
            {
                iv: CryptoJS.enc.Utf8.parse(iv),
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
        return encrypted.toString();
    }

    $(document)
        .ready(function() {
            $('#updateForm')
                .bootstrapValidator({
                    message: '值不能为空',
                    submitButtons: '#btnCommit',
                    feedbackIcons: {
                        valid: 'glyphicon glyphicon-ok',
                        invalid: 'glyphicon glyphicon-remove',
                        validating: 'glyphicon glyphicon-refresh'
                    },
                    fields: {
                        txtOriginalPassword: {
                            message: '原始密码验证失败',
                            validators: {
                                notEmpty: {
                                    message: '原始密码不能为空'
                                }
                            }
                        },
                        txtNewPassword: {
                            message: '新密码验证失败',
                            validators: {
                                notEmpty: {
                                    message: '新密码不能为空'
                                },
                                stringLength: {
                                    min: 8,
                                    max: 32,
                                    message: '密码长度不能少于8个字符,不能超过32个字符'
                                },
                                callback: {
                                    message: '密码必须由数字、字符、特殊字符三种中的两种组成',
                                    callback: function(value, validator) {
                                        var reg2 =
                                            /(?!^\\d+$)(?!^[a-zA-Z]+$)(?!^[_#@@]+$).{8,}/;
                                        return reg2.test(value);
                                    }
                                }
                            }
                        },
                        txtReNewPassword: {
                            message: '重复新密码验证失败',
                            validators: {
                                notEmpty: {
                                    message: '重复新密码不能为空'
                                },
                                identical: {
                                    field: 'txtNewPassword',
                                    message: '两次密码不相同'
                                }
                            }
                        }
                    }
                });
            $("#btnCommit")
                .click(function() {
                    $("#updateForm").bootstrapValidator('validate'); //提交验证
                    if ($("#updateForm").data('bootstrapValidator').isValid()) { //获取验证结果，如果成功，执行下面代码
                        //验证成功后的操作，如ajax
                        var original = $("#txtOriginalPassword").val();
                        var newpassword = $("#txtNewPassword").val();
                        var model = {
                            OriginalPassword: encryptByDES(original, tokenInfo.secret, tokenInfo.iv),
                            NewPassword: encryptByDES(newpassword, tokenInfo.secret, tokenInfo.iv)
                        };
                        $.ajax({
                            url: "ChangePassword",
                            type: "put",
                            data:  JSON.stringify(model),
                            contentType: 'application/json; charset=utf-8',
                            success: function(data) {
                                var result = JSON.parse(data);
                                if (result.code === 200) {
                                    window.location.reload();
                                }
                            }
                        });
                    }
                });
        });
</script>

